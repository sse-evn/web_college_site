// const express = require("express");
// const router = express.Router();
// const fs = require("fs").promises;
// const path = require("path");
// const multer = require("multer");

// const DATA_DIR = path.join(__dirname, "..", "data", "news"); // –ü–∞–ø–∫–∞ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–æ–≤–æ—Å—Ç–µ–π
// const DATA_FILE = path.join(DATA_DIR, "news.json");
// const UPLOADS_DIR = path.join(__dirname, "..", "uploads");

// // üìå –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–ø–∫–∏, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
// const ensureDirExists = async (dir) => {
//     try {
//         await fs.mkdir(dir, { recursive: true });
//         console.log(`–ü–∞–ø–∫–∞ ${dir} –ø—Ä–æ–≤–µ—Ä–µ–Ω–∞/—Å–æ–∑–¥–∞–Ω–∞`);
//     } catch (error) {
//         console.error(`–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–∞–ø–∫–∏ ${dir}:`, error);
//     }
// };

// // üìå –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–∞–ø–æ–∫ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
// ensureDirExists(DATA_DIR);
// ensureDirExists(UPLOADS_DIR);

// // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤
// const storage = multer.diskStorage({
//     destination: (req, file, cb) => {
//         cb(null, UPLOADS_DIR);
//     },
//     filename: (req, file, cb) => {
//         const uniqueSuffix = Date.now() + "-" + Math.round(Math.random() * 1e9);
//         cb(null, `${uniqueSuffix}-${file.originalname}`);
//     }
// });
// const upload = multer({ storage });

// // –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–æ–≤–æ—Å—Ç–µ–π
// const loadNews = async () => {
//     try {
//         await fs.access(DATA_FILE);
//         const data = await fs.readFile(DATA_FILE, "utf-8");
//         return JSON.parse(data);
//     } catch (error) {
//         return [];
//     }
// };

// // –§—É–Ω–∫—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–æ–≤–æ—Å—Ç–µ–π
// const saveNews = async (newsList) => {
//     await ensureDirExists(DATA_DIR); // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–∞–ø–∫–∞ –µ—Å—Ç—å
//     await fs.writeFile(DATA_FILE, JSON.stringify(newsList, null, 2), "utf-8");
// };

// // üìå –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –Ω–æ–≤–æ—Å—Ç–µ–π
// router.get("/", async (req, res) => {
//     try {
//         const news = await loadNews();
//         res.json(news);
//     } catch (error) {
//         res.status(500).json({ error: "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–æ–≤–æ—Å—Ç–µ–π" });
//     }
// });

// // üìå –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ—Å—Ç—å —Å —Ñ–∞–π–ª–æ–º
// router.post("/", upload.single("image"), async (req, res) => {
//     const { text } = req.body;
//     if (!text) {
//         return res.status(400).json({ error: "–¢–µ–∫—Å—Ç –Ω–æ–≤–æ—Å—Ç–∏ –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω" });
//     }

//     const news = await loadNews();
//     const imagePath = req.file ? `/uploads/${req.file.filename}` : null;
//     const newNews = { id: Date.now(), text, image: imagePath };
//     news.push(newNews);
//     await saveNews(news);

//     res.status(201).json(newNews);
// });

// // üìå –£–¥–∞–ª–∏—Ç—å –Ω–æ–≤–æ—Å—Ç—å –ø–æ –∏–Ω–¥–µ–∫—Å—É
// router.delete("/index/:index", async (req, res) => {
//     let news = await loadNews();
//     const index = parseInt(req.params.index);

//     if (index < 0 || index >= news.length) {
//         return res.status(404).json({ error: "–ù–æ–≤–æ—Å—Ç—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞" });
//     }

//     // –ü–æ–ª—É—á–∞–µ–º —É–¥–∞–ª—è–µ–º—É—é –Ω–æ–≤–æ—Å—Ç—å
//     const newsItem = news[index];

//     // –£–¥–∞–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –µ—Å–ª–∏ –æ–Ω–æ –µ—Å—Ç—å
//     if (newsItem.image) {
//         const imagePath = path.join(__dirname, "..", newsItem.image);
//         try {
//             await fs.unlink(imagePath);
//             console.log(`–§–∞–π–ª ${imagePath} —É–¥–∞–ª–µ–Ω`);
//         } catch (error) {
//             console.error("–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ñ–∞–π–ª–∞:", error);
//         }
//     }

//     // –£–¥–∞–ª—è–µ–º –Ω–æ–≤–æ—Å—Ç—å –ø–æ –∏–Ω–¥–µ–∫—Å—É
//     news.splice(index, 1);
//     await saveNews(news);

//     res.sendStatus(204);
// });

// // üìå –£–¥–∞–ª–∏—Ç—å –≤—Å–µ –Ω–æ–≤–æ—Å—Ç–∏ –∏ –∏—Ö —Ñ–∞–π–ª—ã
// router.delete("/", async (req, res) => {
//     try {
//         const news = await loadNews();
//         for (const item of news) {
//             if (item.image) {
//                 const imagePath = path.join(__dirname, "..", item.image);
//                 await fs.unlink(imagePath).catch(err => console.error("–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ñ–∞–π–ª–∞:", err));
//             }
//         }
//         await saveNews([]);
//         res.json({ message: "–í—Å–µ –Ω–æ–≤–æ—Å—Ç–∏ —É–¥–∞–ª–µ–Ω—ã" });
//     } catch (error) {
//         res.status(500).json({ error: "–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –Ω–æ–≤–æ—Å—Ç–µ–π" });
//     }
// });

// module.exports = router;
