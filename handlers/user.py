import logging
import re
from aiogram import Router, types, Bot, F
from aiogram.filters import CommandStart, Command
from aiogram.fsm.context import FSMContext
from aiogram.enums import ParseMode
from datetime import datetime
from typing import Dict, Any

from states import RequestStates # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏—è FSM
import keyboards as kb # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
import texts as txt # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç—ã
import json_storage as db # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞—à–µ JSON —Ö—Ä–∞–Ω–∏–ª–∏—â–µ
import config # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é

# –°–æ–∑–¥–∞–µ–º —Ä–æ—É—Ç–µ—Ä –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö —Ö—ç–Ω–¥–ª–µ—Ä–æ–≤
router = Router()
logger = logging.getLogger(__name__)

# --- –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è HTML ---
def escape_html(text: str) -> str:
    """–≠–∫—Ä–∞–Ω–∏—Ä—É–µ—Ç —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã HTML (<, >, &)."""
    if text is None: # –î–æ–±–∞–≤–∏–º –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ None
        return ""
    return text.replace('&', '&amp;').replace('<', '&lt;').replace('>', '&gt;')


# --- –•—ç–Ω–¥–ª–µ—Ä—ã –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ---

# –•—ç–Ω–¥–ª–µ—Ä –∫–æ–º–∞–Ω–¥—ã /start
@router.message(CommandStart())
async def handle_start(message: types.Message, state: FSMContext): # –î–æ–±–∞–≤–ª—è–µ–º state
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start. –ù–∞—á–∏–Ω–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞—è–≤–∫–∏."""
    user_id = message.from_user.id

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Ä–∞–∑—Ä–µ—à–µ–Ω–æ –ª–∏ —ç—Ç–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–∑–¥–∞–≤–∞—Ç—å –∑–∞—è–≤–∫–∏
    if not db.is_teacher_allowed(user_id):
        await message.reply(txt.ACCESS_DENIED_TEACHER) # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –ø—Ä–∞–≤
        await state.clear() # –ù–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π –æ—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        return

    # –ï—Å–ª–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–æ, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –ø—Ä–æ–±–ª–µ–º—ã
    await message.reply(txt.START_MESSAGE, reply_markup=kb.get_request_types_kb())
    # –ü–µ—Ä–µ–≤–æ–¥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ø–µ—Ä–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ FSM
    await state.set_state(RequestStates.waiting_for_type)

# –•—ç–Ω–¥–ª–µ—Ä –∫–æ–º–∞–Ω–¥—ã /new_request - –¥–µ–ª–∞–µ—Ç —Ç–æ –∂–µ —Å–∞–º–æ–µ, —á—Ç–æ –∏ /start
@router.message(Command("new_request"))
async def handle_new_request(message: types.Message, state: FSMContext):
     """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /new_request. –ù–∞—á–∏–Ω–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞—è–≤–∫–∏."""
     # –ü—Ä–æ—Å—Ç–æ –≤—ã–∑—ã–≤–∞–µ–º —Ö—ç–Ω–¥–ª–µ—Ä handle_start, –æ–Ω –≤—ã–ø–æ–ª–Ω–∏—Ç –≤—Å—é –Ω—É–∂–Ω—É—é –ª–æ–≥–∏–∫—É
     await handle_start(message, state)


# –•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –∑–∞—è–≤–∫–∏ (–∏–ª–∏ –æ—Ç–º–µ–Ω—ã)
@router.message(RequestStates.waiting_for_type)
async def process_request_type(message: types.Message, state: FSMContext):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä —Ç–∏–ø–∞ –∑–∞—è–≤–∫–∏."""
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–µ–∫—Å—Ç
    if message.text:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É "–û—Ç–º–µ–Ω–∞"
        # –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Å —Ç–æ—á–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º –∫–Ω–æ–ø–∫–∏ —Å —ç–º–æ–¥–∑–∏
        if message.text == "‚ùå –û—Ç–º–µ–Ω–∞":
            await state.clear() # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ FSM
            await message.reply(txt.CANCEL_MESSAGE, reply_markup=types.ReplyKeyboardRemove()) # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—Ç–º–µ–Ω–µ –∏ —É–±–∏—Ä–∞–µ–º Reply-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
            return

        # –°–ø–∏—Å–æ–∫ –æ–∂–∏–¥–∞–µ–º—ã—Ö —Ç–µ–∫—Å—Ç–æ–≤ –∫–Ω–æ–ø–æ–∫ —Ç–∏–ø–æ–≤ –∑–∞—è–≤–æ–∫ (—Ç–æ—á–Ω–æ –∫–∞–∫ –Ω–∞ –∫–Ω–æ–ø–∫–∞—Ö —Å —ç–º–æ–¥–∑–∏)
        # –ü—Ä–∏ —Å—Ä–∞–≤–Ω–µ–Ω–∏–∏ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å .lower() –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–æ–Ω–µ–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏,
        # –Ω–æ —ç–º–æ–¥–∑–∏ –º–æ–≥—É—Ç —É—Å–ª–æ–∂–Ω–∏—Ç—å —ç—Ç–æ. –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Ç–æ—á–Ω—ã–π —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏.
        expected_types = ["üíª –ü–ö", "üñ®Ô∏è –ü—Ä–∏–Ω—Ç–µ—Ä", "üìΩÔ∏è –ü—Ä–æ–µ–∫—Ç–æ—Ä", "üñ•Ô∏è –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –¥–æ—Å–∫–∞", "üîÑ –î—Ä—É–≥–æ–µ"]

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –æ–¥–Ω–æ–º—É –∏–∑ –æ–∂–∏–¥–∞–µ–º—ã—Ö —Ç–µ–∫—Å—Ç–æ–≤ –∫–Ω–æ–ø–æ–∫
        if message.text in expected_types:
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ (–∫–æ—Ç–æ—Ä—ã–π —Ç–µ–ø–µ—Ä—å –≤–∫–ª—é—á–∞–µ—Ç —ç–º–æ–¥–∑–∏) –∫–∞–∫ —Ç–∏–ø –∑–∞—è–≤–∫–∏
            await state.update_data(request_type=message.text)
            # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –Ω–æ–º–µ—Ä –∫–∞–±–∏–Ω–µ—Ç–∞ –∏–ª–∏ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –∏ —É–±–∏—Ä–∞–µ–º Reply-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
            await message.reply(txt.LOCATION_PROMPT, reply_markup=types.ReplyKeyboardRemove())
            # –ü–µ—Ä–µ–≤–æ–¥–∏–º FSM –≤ —Å–ª–µ–¥—É—é—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            await state.set_state(RequestStates.waiting_for_location)
            return # –ó–∞–≤–µ—Ä—à–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É, —Ç.–∫. —Ç–∏–ø –≤—ã–±—Ä–∞–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ

    # –ï—Å–ª–∏ –≤–≤–µ–¥–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –Ω–∏ "–û—Ç–º–µ–Ω–∞", –Ω–∏ –æ–¥–Ω–∏–º –∏–∑ –æ–∂–∏–¥–∞–µ–º—ã—Ö —Ç–∏–ø–æ–≤, –∏–ª–∏ –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–µ –±—ã–ª–æ (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Å—Ç–∏–∫–µ—Ä)
    # –ü—Ä–æ—Å–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤—ã–±—Ä–∞—Ç—å –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫ –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å–Ω–æ–≤–∞
    await message.reply("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫.", reply_markup=kb.get_request_types_kb())
    # –û—Å—Ç–∞–µ–º—Å—è –≤ —Ç–µ–∫—É—â–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏ RequestStates.waiting_for_type, –æ–∂–∏–¥–∞—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥


# –•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–≤–æ–¥–∞ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è
@router.message(RequestStates.waiting_for_location)
async def process_request_location(message: types.Message, state: FSMContext):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è."""
    if not message.text: # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–µ–∫—Å—Ç
         await message.reply("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∫–∞–±–∏–Ω–µ—Ç–∞ –∏–ª–∏ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–æ–º.")
         return

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç FSM
    await state.update_data(location=message.text)
    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∏–º—è –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–≥–æ –ª–∏—Ü–∞
    await message.reply(txt.NAME_PROMPT)
    # –ü–µ—Ä–µ–≤–æ–¥–∏–º FSM –≤ —Å–ª–µ–¥—É—é—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await state.set_state(RequestStates.waiting_for_name)

# –•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–≤–æ–¥–∞ –∏–º–µ–Ω–∏
@router.message(RequestStates.waiting_for_name)
async def process_request_name(message: types.Message, state: FSMContext):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥ –∏–º–µ–Ω–∏ —á–µ–ª–æ–≤–µ–∫–∞."""
    if not message.text: # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–µ–∫—Å—Ç
         await message.reply("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è —Ç–µ–∫—Å—Ç–æ–º.")
         return

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–º—è –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç FSM
    await state.update_data(contact_name=message.text)
    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã
    await message.reply(txt.DESCRIPTION_PROMPT)
    # –ü–µ—Ä–µ–≤–æ–¥–∏–º FSM –≤ —Å–ª–µ–¥—É—é—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await state.set_state(RequestStates.waiting_for_description)

# –•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–≤–æ–¥–∞ –æ–ø–∏—Å–∞–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã
@router.message(RequestStates.waiting_for_description)
async def process_request_description(message: types.Message, state: FSMContext):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥ –æ–ø–∏—Å–∞–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—é."""
    user_id = message.from_user.id # –ü–æ–ª—É—á–∞–µ–º user_id –∑–¥–µ—Å—å –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤

    # –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –ø–µ—Ä–µ–¥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º (–Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π)
    if not db.is_teacher_allowed(user_id):
        await state.clear() # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ, —Ç.–∫. –ø—Ä–∞–≤ –Ω–µ—Ç
        await message.reply(txt.ACCESS_DENIED_TEACHER)
        return

    if not message.text: # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–µ–∫—Å—Ç
         await message.reply("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–ø–∏—à–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É —Ç–µ–∫—Å—Ç–æ–º.")
         # –û—Å—Ç–∞–µ–º—Å—è –≤ —ç—Ç–æ–º –∂–µ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
         return


    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç FSM
    await state.update_data(description=message.text)

    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ FSM –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏
    user_data = await state.get_data()
    request_type = user_data.get('request_type')
    location = user_data.get('location')
    contact_name = user_data.get('contact_name')
    description = user_data.get('description')

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è, —ç–∫—Ä–∞–Ω–∏—Ä—É—è –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è HTML
    confirmation_text = txt.CONFIRMATION_TEXT_TEMPLATE.format(
        request_type=escape_html(request_type),
        location=escape_html(location),
        contact_name=escape_html(contact_name),
        description=escape_html(description)
    )

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Å–æ–±—Ä–∞–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –∏ Inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    await message.reply(confirmation_text, reply_markup=kb.get_confirm_request_kb(), parse_mode=ParseMode.HTML)
    # –ü–µ—Ä–µ–≤–æ–¥–∏–º FSM –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    await state.set_state(RequestStates.confirm_request)

# –•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–î–∞, –æ—Ç–ø—Ä–∞–≤–∏—Ç—å"
@router.callback_query(RequestStates.confirm_request, F.data == "confirm_request_yes")
async def confirm_request_yes(callback_query: types.CallbackQuery, state: FSMContext, bot: Bot):
    """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞—è–≤–∫—É."""
    user_id = callback_query.from_user.id # –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –∫–æ–ª–±—ç–∫–∞

    # –ü–æ–≤—Ç–æ—Ä–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–µ—Ä–µ–¥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –∑–∞—è–≤–∫–∏ (–Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π)
    if not db.is_teacher_allowed(user_id):
        await state.clear() # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        await callback_query.message.edit_text(txt.ACCESS_DENIED_TEACHER) # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –ø—Ä–∞–≤
        await callback_query.answer() # –ó–∞–∫—Ä—ã–≤–∞–µ–º "—á–∞—Å–∏–∫–∏" –Ω–∞ –∫–Ω–æ–ø–∫–µ
        return

    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∑–∞—è–≤–∫–∏ –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ FSM
    user_data = await state.get_data()
    teacher_username = callback_query.from_user.username # –ü–æ–ª—É—á–∞–µ–º username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Telegram
    teacher_fullname = callback_query.from_user.full_name # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª–Ω–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Telegram

    request_type = user_data.get('request_type')
    location = user_data.get('location')
    contact_name = user_data.get('contact_name')
    description = user_data.get('description')

    # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞—è–≤–∫—É –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ JSON
    request_id = db.add_request(user_id, teacher_username, teacher_fullname, # –ò—Å–ø–æ–ª—å–∑—É–µ–º user_id
                                 request_type, description, location, contact_name)

    # –°–æ–æ–±—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, —á—Ç–æ –∑–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞
    await callback_query.message.edit_text(txt.REQUEST_ACCEPTED_MESSAGE)

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤, —ç–∫—Ä–∞–Ω–∏—Ä—É—è –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    username_mention = f', @{escape_html(teacher_username)}' if teacher_username else '' # –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º username
    admin_notification_text = txt.ADMIN_NEW_REQUEST_NOTIFICATION_TEMPLATE.format(
        request_id=request_id,
        teacher_fullname=escape_html(teacher_fullname), # –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º Telegram –§–ò–û
        teacher_id=user_id,
        username_mention=username_mention,
        contact_name=escape_html(contact_name), # –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–µ –∏–º—è
        request_type=escape_html(request_type), # –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º —Ç–∏–ø
        location=escape_html(location), # –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ
        description=escape_html(description), # –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ
        created_at=datetime.now().strftime('%Y-%m-%d %H:%M:%S') # –í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞—è–≤–∫–∏
    )

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º
    try:
        await bot.send_message(
            config.ADMIN_NOTIFICATION_CHAT_ID, # ID —á–∞—Ç–∞ –∞–¥–º–∏–Ω–∞ –∏–∑ config.py
            admin_notification_text,
            # –ü—Ä–∏–∫—Ä–µ–ø–ª—è–µ–º Inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –∞–¥–º–∏–Ω–∞, —á—Ç–æ–±—ã –æ–Ω –º–æ–≥ —Å—Ä–∞–∑—É –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–µ—Ç–∞–ª–∏
            reply_markup=kb.get_request_details_kb(request_id, 'open'),
            parse_mode=ParseMode.HTML # –ò—Å–ø–æ–ª—å–∑—É–µ–º HTML –¥–ª—è —Ä–∞–∑–º–µ—Ç–∫–∏
        )
    except Exception as e:
        # –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É, –µ—Å–ª–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –Ω–µ –æ—Ç–ø—Ä–∞–≤–∏–ª–æ—Å—å (–Ω–∞–ø—Ä–∏–º–µ—Ä, –Ω–µ–≤–µ—Ä–Ω—ã–π ID —á–∞—Ç–∞ –∏–ª–∏ –∞–¥–º–∏–Ω –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞)
        logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É {config.ADMIN_NOTIFICATION_CHAT_ID}: {e}")

    await state.clear() # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ FSM –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞
    await callback_query.answer() # –ó–∞–∫—Ä—ã–≤–∞–µ–º "—á–∞—Å–∏–∫–∏" –Ω–∞ –∫–Ω–æ–ø–∫–µ

# –•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–ù–µ—Ç, –æ—Ç–º–µ–Ω–∏—Ç—å"
@router.callback_query(RequestStates.confirm_request, F.data == "confirm_request_no")
async def confirm_request_no(callback_query: types.CallbackQuery, state: FSMContext):
    """–û—Ç–º–µ–Ω—è–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞—è–≤–∫–∏."""
    await state.clear() # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ FSM
    await callback_query.message.edit_text(txt.CANCEL_MESSAGE) # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—Ç–º–µ–Ω–µ
    await callback_query.answer() # –ó–∞–∫—Ä—ã–≤–∞–µ–º "—á–∞—Å–∏–∫–∏" –Ω–∞ –∫–Ω–æ–ø–∫–µ
