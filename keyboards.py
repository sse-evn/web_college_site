from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder
from typing import List, Dict, Any, Tuple

# --- –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ---

def get_request_types_kb() -> ReplyKeyboardMarkup:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç Reply-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –∑–∞—è–≤–∫–∏ —Å —ç–º–æ–¥–∑–∏."""
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üíª –ü–ö")],
            [KeyboardButton(text="üñ®Ô∏è –ü—Ä–∏–Ω—Ç–µ—Ä")],
            [KeyboardButton(text="üìΩÔ∏è –ü—Ä–æ–µ–∫—Ç–æ—Ä")],
            [KeyboardButton(text="üñ•Ô∏è –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –¥–æ—Å–∫–∞")],
            [KeyboardButton(text="üîÑ –î—Ä—É–≥–æ–µ")],
            [KeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞")]
        ],
        resize_keyboard=True,
        one_time_keyboard=True
    )

def get_confirm_request_kb() -> InlineKeyboardMarkup:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç Inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞—è–≤–∫–∏."""
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text="–î–∞, –æ—Ç–ø—Ä–∞–≤–∏—Ç—å", callback_data="confirm_request_yes"),
                InlineKeyboardButton(text="–ù–µ—Ç, –æ—Ç–º–µ–Ω–∏—Ç—å", callback_data="confirm_request_no")
            ]
        ]
    )

# --- –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –∞–¥–º–∏–Ω–∞ ---

def get_admin_menu_kb() -> InlineKeyboardMarkup:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç Inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é –∞–¥–º–∏–Ω–∞."""
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—Ç–∫—Ä—ã—Ç—ã–µ –∑–∞—è–≤–∫–∏", callback_data="admin_view_open_requests")],
            [InlineKeyboardButton(text="–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ –∑–∞—è–≤–∫–∏", callback_data="admin_view_completed_requests")], # <-- –ù–æ–≤–∞—è –∫–Ω–æ–ø–∫–∞
            [InlineKeyboardButton(text="–ò—Å—Ç–æ—Ä–∏—è –≤—Å–µ—Ö –∑–∞—è–≤–æ–∫", callback_data="admin_view_all_requests")], # <-- –ù–æ–≤–∞—è –∫–Ω–æ–ø–∫–∞
            [InlineKeyboardButton(text="–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º–∏", callback_data="admin_manage_admins")],
            [InlineKeyboardButton(text="–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É—á–∏—Ç–µ–ª—è–º–∏", callback_data="admin_manage_teachers")]
        ]
    )

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å–æ —Å–ø–∏—Å–∫–æ–º –∑–∞—è–≤–æ–∫ (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –æ—Ç–∫—Ä—ã—Ç—ã—Ö –∏ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö)
def build_requests_list_kb(requests: List[Dict[str, Any]]) -> InlineKeyboardMarkup:
    """–°—Ç—Ä–æ–∏—Ç Inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å–æ —Å–ø–∏—Å–∫–æ–º –∑–∞—è–≤–æ–∫ –¥–ª—è –∞–¥–º–∏–Ω–∞."""
    builder = InlineKeyboardBuilder()
    for req in requests:
        req_id = req.get("id", "N/A")
        contact_name = req.get("contact_name", "–ù–µ —É–∫–∞–∑–∞–Ω–æ")
        req_type = req.get("request_type", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
        location = req.get("location", "–ù–µ —É–∫–∞–∑–∞–Ω–æ")
        created_at = req.get("created_at", "N/A")

        button_text = f"‚Ññ{req_id} - {req_type} –≤ {location} –æ—Ç {contact_name}"
        # –ö–Ω–æ–ø–∫–∞ –≤–µ–¥–µ—Ç –Ω–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä –¥–µ—Ç–∞–ª–µ–π, –∏—Å–ø–æ–ª—å–∑—É—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ö—ç–Ω–¥–ª–µ—Ä
        builder.add(InlineKeyboardButton(text=button_text[:60], callback_data=f"view_request_{req_id}"))

    builder.adjust(1)
    # –î–æ–±–∞–≤–∏–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å" –≤ –∫–æ–Ω—Ü–µ —Å–ø–∏—Å–∫–æ–≤ –∑–∞—è–≤–æ–∫
    builder.row(InlineKeyboardButton(text="–ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å", callback_data="admin"))

    return builder.as_markup()


def get_request_details_kb(request_id: int, status: str) -> InlineKeyboardMarkup:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç Inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –¥–µ–π—Å—Ç–≤–∏—è–º–∏ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∑–∞—è–≤–∫–∏."""
    builder = InlineKeyboardBuilder()

    if status == 'open':
        builder.add(InlineKeyboardButton(text="–í–∑—è—Ç—å –≤ —Ä–∞–±–æ—Ç—É", callback_data=f"update_status_{request_id}_in_progress"))
    elif status == 'in_progress':
         builder.add(InlineKeyboardButton(text="–ó–∞–≤–µ—Ä—à–∏—Ç—å", callback_data=f"update_status_{request_id}_completed"))
         builder.add(InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å –≤ –æ—Ç–∫—Ä—ã—Ç—ã–µ", callback_data=f"update_status_{request_id}_open"))

    if status != 'completed' and status != 'cancelled':
         builder.add(InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∏—Ç—å", callback_data=f"update_status_{request_id}_cancelled"))

    # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥ –∫ –æ—Ç–∫—Ä—ã—Ç—ã–º"
    builder.add(InlineKeyboardButton(text="–ù–∞–∑–∞–¥ –∫ –æ—Ç–∫—Ä—ã—Ç—ã–º", callback_data="admin_view_open_requests"))
    builder.adjust(1)
    return builder.as_markup()


def get_admin_manage_kb() -> InlineKeyboardMarkup:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç Inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º–∏ (–¥–æ–±–∞–≤–∏—Ç—å/—É–¥–∞–ª–∏—Ç—å)."""
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞", callback_data="admin_add_start"),
                InlineKeyboardButton(text="–£–¥–∞–ª–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞", callback_data="admin_remove_start")
            ],
            [InlineKeyboardButton(text="–ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å", callback_data="admin")]
        ]
    )

def get_teacher_manage_kb() -> InlineKeyboardMarkup:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç Inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —É—á–∏—Ç–µ–ª—è–º–∏ (–¥–æ–±–∞–≤–∏—Ç—å/—É–¥–∞–ª–∏—Ç—å)."""
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å —É—á–∏—Ç–µ–ª—è", callback_data="teacher_add_start"),
                InlineKeyboardButton(text="–£–¥–∞–ª–∏—Ç—å —É—á–∏—Ç–µ–ª—è", callback_data="teacher_remove_start")
            ],
            [InlineKeyboardButton(text="–ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å", callback_data="admin")]
        ]
    )
