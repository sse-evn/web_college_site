from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder
from typing import List, Dict, Any, Tuple

def get_request_types_kb() -> ReplyKeyboardMarkup:
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üíª –ü–ö")],
            [KeyboardButton(text="üñ®Ô∏è –ü—Ä–∏–Ω—Ç–µ—Ä")],
            [KeyboardButton(text="üìΩÔ∏è –ü—Ä–æ–µ–∫—Ç–æ—Ä")],
            [KeyboardButton(text="üñ•Ô∏è –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –¥–æ—Å–∫–∞")],
            [KeyboardButton(text="üîÑ –î—Ä—É–≥–æ–µ")],
            [KeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞")]
        ],
        resize_keyboard=True,
        one_time_keyboard=True
    )

def get_confirm_request_kb() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text="–î–∞, –æ—Ç–ø—Ä–∞–≤–∏—Ç—å", callback_data="confirm_request_yes"),
                InlineKeyboardButton(text="–ù–µ—Ç, –æ—Ç–º–µ–Ω–∏—Ç—å", callback_data="confirm_request_no")
            ]
        ]
    )

def get_admin_menu_kb() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—Ç–∫—Ä—ã—Ç—ã–µ –∑–∞—è–≤–∫–∏", callback_data="admin_view_open_requests")],
            [InlineKeyboardButton(text="–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ –∑–∞—è–≤–∫–∏", callback_data="admin_view_completed_requests")],
            [InlineKeyboardButton(text="–ò—Å—Ç–æ—Ä–∏—è –≤—Å–µ—Ö –∑–∞—è–≤–æ–∫", callback_data="admin_view_all_requests")],
            [
                InlineKeyboardButton(text="üßπ –û—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é", callback_data="admin_clear_history_start"),
                InlineKeyboardButton(text="üì• –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é", callback_data="admin_export_history")
            ],
            [InlineKeyboardButton(text="–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º–∏", callback_data="admin_manage_admins")],
            [InlineKeyboardButton(text="–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É—á–∏—Ç–µ–ª—è–º–∏", callback_data="admin_manage_teachers")]
        ]
    )

def build_requests_list_kb(requests: List[Dict[str, Any]]) -> InlineKeyboardMarkup:
    builder = InlineKeyboardBuilder()
    for req in requests:
        req_id = req.get("id", "N/A")
        contact_name = req.get("contact_name", "–ù–µ —É–∫–∞–∑–∞–Ω–æ")
        req_type = req.get("request_type", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
        location = req.get("location", "–ù–µ —É–∫–∞–∑–∞–Ω–æ")
        created_at = req.get("created_at", "N/A")

        button_text = f"‚Ññ{req_id} - {req_type} –≤ {location} –æ—Ç {contact_name}"
        builder.add(InlineKeyboardButton(text=button_text[:60], callback_data=f"view_request_{req_id}"))

    builder.adjust(1)
    builder.row(InlineKeyboardButton(text="–ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å", callback_data="admin"))

    return builder.as_markup()

def get_request_details_kb(request_id: int, status: str) -> InlineKeyboardMarkup:
    builder = InlineKeyboardBuilder()

    if status == 'open':
        builder.add(InlineKeyboardButton(text="–í–∑—è—Ç—å –≤ —Ä–∞–±–æ—Ç—É", callback_data=f"update_status_{request_id}_in_progress"))
    elif status == 'in_progress':
         builder.add(InlineKeyboardButton(text="–ó–∞–≤–µ—Ä—à–∏—Ç—å", callback_data=f"update_status_{request_id}_completed"))
         builder.add(InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å –≤ –æ—Ç–∫—Ä—ã—Ç—ã–µ", callback_data=f"update_status_{request_id}_open"))

    if status != 'completed' and status != 'cancelled':
         builder.add(InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∏—Ç—å", callback_data=f"update_status_{request_id}_cancelled"))

    builder.add(InlineKeyboardButton(text="–ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å –≤—Ä—É—á–Ω—É—é", callback_data=f"manual_status_start_{request_id}"))

    builder.add(InlineKeyboardButton(text="–ù–∞–∑–∞–¥ –∫ –æ—Ç–∫—Ä—ã—Ç—ã–º", callback_data="admin_view_open_requests"))
    builder.adjust(1)
    return builder.as_markup()

def get_admin_manage_kb() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞", callback_data="admin_add_start"),
                InlineKeyboardButton(text="–£–¥–∞–ª–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞", callback_data="admin_remove_start")
            ],
            [InlineKeyboardButton(text="–ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å", callback_data="admin")]
        ]
    )

def get_teacher_manage_kb() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å —É—á–∏—Ç–µ–ª—è", callback_data="teacher_add_start"),
                InlineKeyboardButton(text="–£–¥–∞–ª–∏—Ç—å —É—á–∏—Ç–µ–ª—è", callback_data="teacher_remove_start")
            ],
            [InlineKeyboardButton(text="–ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å", callback_data="admin")]
        ]
    )

def get_clear_history_confirmation_kb() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text="–î–∞, –æ—á–∏—Å—Ç–∏—Ç—å", callback_data="admin_clear_history_confirm_yes"),
                InlineKeyboardButton(text="–ù–µ—Ç, –æ—Ç–º–µ–Ω–∞", callback_data="admin_clear_history_confirm_no")
            ]
        ]
    )

def get_rating_keyboard(request_id: int) -> InlineKeyboardMarkup:
    builder = InlineKeyboardBuilder()
    for rating in range(1, 11):
        builder.add(InlineKeyboardButton(text=str(rating), callback_data=f"rate_request_{request_id}_{rating}"))
    builder.adjust(5)
    return builder.as_markup()

def get_manual_status_keyboard() -> InlineKeyboardMarkup:
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="–û—Ç–∫—Ä—ã—Ç–∞", callback_data="manual_status_open"))
    builder.add(InlineKeyboardButton(text="–í —Ä–∞–±–æ—Ç–µ", callback_data="manual_status_in_progress"))
    builder.add(InlineKeyboardButton(text="–ó–∞–≤–µ—Ä—à–µ–Ω–∞", callback_data="manual_status_completed"))
    builder.add(InlineKeyboardButton(text="–û—Ç–º–µ–Ω–µ–Ω–∞", callback_data="manual_status_cancelled"))
    builder.adjust(2)
    return builder.as_markup()
